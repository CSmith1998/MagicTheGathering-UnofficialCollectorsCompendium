Sequence Ideas:

xxx Compendium: UC(first 4 of AccountID)-(last 4 of AccountID)_(Sequence ++0)
xxx 	AccessID: UA(first 4 of AccountID)(TimeStamp Hashed)f

Views Needed:

- Card Details
    *Get Card
    *Get Face(s)
    *Get Color(s)
    *Get Identity(if applicable)
    *Get Artist(s)
    *Get Prices
    *Get Face Image(s) Urls
    *Get Card Urls
    *Get Purchase Urls
    *Get Legalities
    *Get Finishes

- Admin Statistics
	*TBD



Functions Needed:

- Add new card to DB. Accept CardJSON
    *Insert into the following tables as appropriate.
        *Card
        *Face(s)
        *Color(s)
        *Identity (if applicable)
        *Artist(s)
        *Prices
        *Face Image(s) Urls
        *Card Urls
        *Purchase Urls
        *Legalities
        *Finishes

- Add a new card to user's collection. Accept AccountID and CardJSON and Quantity
	*Check if CardID exists in DB. If not, run function to add new card to DB
	*Check if CardID exists in User's Collection. If so, add Quantity

-xxx Modify Card Quantity. Accept AccountID, CardID and Quantity
	*Add or subtract from card quantity accordingly

-xxx Account Registration. Accept AccountID, Time, IP
	*Input Registration details (must happen after related triggers).

-xxx New Access. Accept AccountID, Type, Time.
	*Straightforward. Exists to avoid multiple API calls.

-xxx Get Total Card Quantity. Accept AccountID and CardName
	*Get all copies of CardName owned by the given account.
	*Sum up the quantities of these cards for a total quantity.



Triggers Needed:

-xxx On Inserting new User
	*Give Basic Role
	*Create Details Entry
		*Generate CompendiumID
		*Generate AccessID

-xxx On Inserting into Access
	*Generate Access Time

-xxx On Update Collection
	*If Condition is blank or null. Set to 'UO-UKN'
	*If StorageLocation is blank or null. Set to 'Undefined'
	*If Quantity becomes <= 0, Remove record. 
